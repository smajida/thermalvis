cmake_minimum_required(VERSION 2.8 FATAL_ERROR)
SET_PROPERTY(GLOBAL PROPERTY TARGET_SUPPORTS_SHARED_LIBS TRUE)

IF(WIN32 OR win64)
	SET(CMAKE_FIND_LIBRARY_SUFFIXES .lib .dll)
ELSE()
	SET(CMAKE_FIND_LIBRARY_SUFFIXES .a)
ENDIF()

# Flags necessary to get Managed Code functioning for Windows-Optris demo
SET(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} /clr")
STRING (REGEX REPLACE "/RTC1" "" CMAKE_CXX_FLAGS_DEBUG "${CMAKE_CXX_FLAGS_DEBUG}")
STRING (REGEX REPLACE "/EHsc" "" CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS}")

LIST(APPEND avlibs_LIST va avformat avcodec avutil avdevice swscale)

set (ADDITIONAL_LIBS thermalvis)

IF(IS_WINDOWS)
	SET(HAS_AVLIBS_AVAILABLE FALSE)
ELSE()
	SET(HAS_AVLIBS_AVAILABLE TRUE)
	
	foreach(AVLIBS_SUB_LIB ${avlibs_LIST})
		string(TOUPPER "${AVLIBS_SUB_LIB}" UPPERCASE_NAME)
		FIND_LIBRARY("LIB${UPPERCASE_NAME}_LIBRARY NAMES" ${AVLIBS_SUB_LIB} PATHS ${SEARCH_LIBRARY_PATHS})
		if(HAS_AVLIBS_AVAILABLE AND (NOT "LIB${UPPERCASE_NAME}_LIBRARY"))
			message(WARNING "${AVLIBS_SUB_LIB} library is missing. May not be able to use Miricle camera.")
			SET(HAS_AVLIBS_AVAILABLE FALSE)
		else()
			LIST(APPEND ADDITIONAL_LIBS "LIB${UPPERCASE_NAME}_LIBRARY")
		endif()
	endforeach(AVLIBS_SUB_LIB) 
ENDIF()
 
IF(HAS_AVLIBS_AVAILABLE)
	add_definitions( -D_AVLIBS_AVAILABLE_ )
ENDIF()
 
project(streamer)

FILE(GLOB FLOW_HEADERS *.h*)
FILE(GLOB FLOW_SOURCES *.cpp)

INCLUDE_DIRECTORIES("../../include")

IF(NOT(WIN32 OR win64))
	INCLUDE_DIRECTORIES("../../cfg/cpp/thermalvis/")
ENDIF()

IF (NOT ("${_OpenCV_LIB_PATH}" STREQUAL ""))
	LINK_DIRECTORIES(${_OpenCV_LIB_PATH})
ENDIF()

LIST(APPEND ADDITIONAL_LIBS ${OpenCV_LIBRARIES})

IF(WIN32 OR win64)
	LIST(APPEND ADDITIONAL_LIBS ${Boost_LIBRARIES})
ENDIF()

SET(LIBRARY_NAME "thermalvis_streamer")
ADD_LIBRARY(${LIBRARY_NAME} ${FLOW_SOURCES} ${FLOW_HEADERS} )
TARGET_LINK_LIBRARIES(${LIBRARY_NAME} ${OpenCV_LIBS} ${ADDITIONAL_LIBS})
SET_TARGET_PROPERTIES(${LIBRARY_NAME} PROPERTIES COMPILE_FLAGS ${THERMALVIS_COMPILE_FLAGS})
